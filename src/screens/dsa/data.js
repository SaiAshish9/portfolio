export const DATA = {
  ds: {
    title: "Data Structures",
    types: {
      primitive: "Primitive",
      "non-primitive": "Non Primitive",
    },
  },
  algo: {
    title: "Algorithms",
    types: {
      sort: "Sorting",
      search: "Searching",
      Complexity: "Complexity",
      tradeOf: "Space Time Trade Off",
      recursive: "Recursion",
      "divide&Conquer": "Divide & Conquer",
      greedy: "Greedy",
      dp: "Dynamic Programming",
      bruteForce: "Brute Force",
      backtracking: "Backtracking",
      branchAndBound: "Branch And Bound",
      randomized: "Randomized",
    },
  },
  interview: {
    title: "Interview Questions",
    types: {
      amazon: "Amazon",
      paytm: "Paytm",
      cred: "CRED",
      vmware: "Vmware",
      turing: "Turing",
      stewards: "Stewards",
      inuvest: "Inuvest",
      nex2Me: "Nex2Me",
      pracify: "Pracify ( Mauka )",
      appTown: "App Town",
    },
    note: "Atmost there will be four rounds , the second round will be based on your development skills , experience, projects and code quality. Last two will be based upon hr and they will be similar to the second round.",
  },
  leetcode: {
    title: "Leetcode Questions (1008)",
    types: {
      q1: "Q1. Two Sum",
      q2: "Q2. Add Two Numbers",
      q3: "Q3: Longest Substring Without Repeating Characters",
      q4: "Q4: Median Of Two Sorted Arrays",
      q5: "Q5: LPS",
      q6: "Q6: ZigZag Conversion",
      q7: "Q7: Reverse Integer",
      q8: "Q8: ATOI",
      q9: "Q9: Palindrome",
      q10: "Q10. Regular Expression Matching",
      q11: "Q11. Container With Most Medium Water",
      q12: "Q12. Integer To Roman",
      q13: "Q13 : Roman To Integer",
      q14: "Q14 : Longest Common Prefix",
      q15: "Q15: 3Sum",
      q16: "Q16 : 3SumClosest",
      q17: "Q17 : Letter Combinations Of A PhoneNumber",
      q18: "Q18 : 4Sum",
      q19: "Q19 : Remove Nth Node From End of List",
      q20: "Q20 : Valid Parenthesis",
      q21: "Q21 : Merge Two Sorted Lists",
      q22: "Q22 : Generate Parentheses",
      q23: "Q23: Merge K Sorted Lists",
      q24: "Q24 : Swap Nodes In Pairs",
      q25: "Q25 : Reverse Nodes in k-Group",
      q26: "Q26 : Remove Duplicates from Sorted Array.",
      q27: "Q27 : Remove Element",
      q28: "Q28 : Implement strStr()",
      q29: "Q29 : Divide Two Integers",
      q30: "Q30 : Substring with Concatenation of All Words",
      q31: "Q31 : Next Permutation",
      q32: "Q32 : Longest Valid Parentheses",
      q33: "Q33 : Search in Rotated Sorted Array",
      q34: "Q34 : Find First and Last Position of Element in Sorted Array",
      q35: "Q35: Search Insert Position",
      q36: "Q36 : Valid Sudoku",
      q37: "Q37 : Sudoku Solver",
      q38: "Q38 : Count And Say",
      q39: "Q39 : Combination Sum",
      q40: "Q40 : Combination Sum 2",
      q41: "Q41 : Missing Positive",
      q42: "Q42 : Trapping Rain Water",
      q43: "Q43 : Multiply Strings",
      q44: "Q44 : Wildcard Matching",
      q45: "Q45 : Jump Game 2",
      q46: "Q46 : Permutations",
      q47: "Q47 : Permutations 2",
      q48: "Q48 : Rotate Image",
      q49: "Q49 : Group Anagrams",
      q50: "Q50 : Pow(x,n)",
      q51: "Q51 : N-Queens",
      q52: "Q52 : N-Queenâ€™s 2",
      q53: "Q53 : Maximum Subarray",
      q54: "Q54 : Spiral Matrix",
      q55: "Q55 : Jump Game",
    },
  },
};

// at algorithms also include its characteristics
